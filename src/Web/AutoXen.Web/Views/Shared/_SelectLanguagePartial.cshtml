@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var pickedCulture = this.Context.Request.HttpContext.Features.Get<IRequestCultureFeature>().RequestCulture.Culture;
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div id="languageDropDown" title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage"
          method="post">

        <div class="dropdown">
            <input type="image" class="dropdown-toggle" href="#" role="button" id="dropdownLang" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" src="~/Country icons/@(pickedCulture)-32.ico"  />

            <div class="dropdown-menu" aria-labelledby="dropdownLang">
                @foreach (var culture in cultureItems)
                {
                    if (pickedCulture.ToString() != culture.Value)
                    {
                        <button class="dropdown-item" type="submit" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" asp-route-culture="@culture.Value">
                            <img src="~/Country icons/@(culture.Value.ToLower())-32.ico" />
                        </button>
                    }
                }
            </div>
        </div>
    </form>
</div>